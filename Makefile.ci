##########################################################################
##         #   The Coq Proof Assistant / The Coq Development Team       ##
##  v      #         Copyright INRIA, CNRS and contributors             ##
## <O___,, # (see version control and CREDITS file for authors & dates) ##
##   \VV/  ###############################################################
##    //   #    This file is distributed under the terms of the         ##
##         #     GNU Lesser General Public License Version 2.1          ##
##         #     (see LICENSE file for the text of the license)         ##
##########################################################################

CI_TARGETS= \
    ci-aac_tactics \
    ci-argosy \
    ci-autosubst \
    ci-bbv \
    ci-bedrock2 \
    ci-bignums \
    ci-category_theory \
    ci-color \
    ci-compcert \
    ci-coq_dpdgraph \
    ci-coqtail \
    ci-coquelicot \
    ci-corn \
    ci-cross_crypto \
    ci-coq_performance_tests \
    ci-coq_tools \
    ci-coqprime \
    ci-deriving \
    ci-elpi \
    ci-engine_bench \
    ci-ext_lib \
    ci-equations \
    ci-fcsl_pcm \
    ci-fiat_crypto \
    ci-fiat_crypto_legacy \
    ci-fiat_crypto_ocaml \
    ci-fiat_parsers \
    ci-flocq \
    ci-fourcolor \
    ci-gappa \
    ci-geocoq \
    ci-coqhammer \
    ci-hott \
    ci-iris \
    ci-math_classes \
    ci-mathcomp \
    ci-mczify \
    ci-menhir \
    ci-metacoq \
    ci-mtac2 \
    ci-oddorder \
    ci-paramcoq \
    ci-perennial \
    ci-quickchick \
    ci-reduction_effects \
    ci-relation_algebra \
    ci-rewriter \
    ci-sf \
    ci-simple_io \
    ci-stdlib2 \
    ci-tlc \
    ci-unimath \
    ci-unicoq \
    ci-verdi_raft \
    ci-vscoq \
    ci-vst

.PHONY: ci-all $(CI_TARGETS)

ci-help:
	echo '*** Coq CI system, please specify a target to build.'
	false

ci-all: $(CI_TARGETS)

ci-category_theory: ci-equations

ci-color: ci-bignums

ci-coqprime: ci-bignums
ci-coquelicot: ci-mathcomp
ci-deriving: ci-mathcomp
ci-math_classes: ci-bignums

ci-corn: ci-math_classes

ci-mtac2: ci-unicoq

ci-fiat_crypto: ci-coqprime ci-rewriter
ci-fiat_crypto_ocaml: ci-fiat_crypto

ci-fourcolor: ci-mathcomp
ci-oddorder: ci-mathcomp
ci-fcsl_pcm: ci-mathcomp
ci-mczify: ci-mathcomp

ci-iris: ci-autosubst

ci-geocoq: ci-mathcomp

ci-simple_io: ci-ext_lib
ci-quickchick: ci-ext_lib ci-simple_io ci-mathcomp

ci-metacoq: ci-equations

ci-vst: ci-flocq

ci-compcert: ci-menhir ci-flocq
ci-gappa: ci-flocq

# Generic rule, we use make to ease CI integration
$(CI_TARGETS): ci-%:
	+./dev/ci/ci-wrapper.sh $*

# if we do eg "make states ci-foo", ci-foo will wait for states
# if we just do "make ci-foo" it will just run ci-foo
# (technically the ci-* targets depend on world but it can be
# convenient to run them with less than world compiled)
NON_CI_GOALS:=$(strip $(filter-out ci-%,$(MAKECMDGOALS)))
ifneq (,$(NON_CI_GOALS))
$(CI_TARGETS): $(NON_CI_GOALS)
endif

# For emacs:
# Local Variables:
# mode: makefile
# End:
