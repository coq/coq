# -*- mode: makefile -*-
# Dune Makefile for Coq

.PHONY: help voboot states world watch check quickbyte quickopt test-suite release apidoc ocheck ireport shims clean

# use DUNEOPT=--display=short for a more verbose build
# DUNEOPT=--display=short

BUILD_CONTEXT=_build/default

help:
	@echo "Welcome to Coq's Dune-based build system. Targets are:"
	@echo "  - states:  build a minimal functional coqtop"
	@echo "  - world:   build all binaries and libraries"
	@echo "  - watch:   build all binaries and libraries [continuous build]"
	@echo "  - check:   build all ML files as fast as possible [requires Dune >= 1.5.0]"
	@echo "  - quickbyte:  build main ML files [coqtop + plugins + ide + printers] using the bytecode compiler"
	@echo "  - quickopt:   build main ML files [coqtop + plugins + ide + printers] using the optimizing compiler"
	@echo "  - test-suite: run Coq's test suite"
	@echo "  - release: build Coq in release mode"
	@echo "  - apidoc:  build ML API documentation"
	@echo "  - ocheck:  build for all supported OCaml versions [requires OPAM]"
	@echo "  - ireport: build with optimized flambda settings and emit an inline report"
	@echo "  - shims:   put shims in bin/ to call the coq in $(BUILD_CONTEXT) with the right options (eg -coqlib)"
	@echo "             This allows invoking Coq the same way as when using the makefile based build system"
	@echo "  - clean:   remove build directory and autogenerated files"
	@echo "  - help:    show this message"

voboot:
	dune build $(DUNEOPT) @vodeps
	dune exec coq_dune $(BUILD_CONTEXT)/.vfiles.d

states: voboot
	dune build $(DUNEOPT) theories/Init/Prelude.vo

world: voboot
	dune build $(DUNEOPT) @install

watch: voboot
	dune build $(DUNEOPT) @install -w

check: voboot
	dune build $(DUNEOPT) @check

COQTOP_FILES=ide/idetop.bc ide/coqide_main.bc checker/coqchk.bc
PLUGIN_FILES=$(wildcard plugins/*/*.mlpack)
PRINTER_FILES=dev/top_printers.cma
QUICKBYTE_TARGETS=$(COQTOP_FILES) $(PLUGIN_FILES:.mlpack=.cma) $(PRINTER_FILES) topbin/coqtop_byte_bin.bc
QUICKOPT_TARGETS=$(COQTOP_FILES:.bc=.exe) $(PLUGIN_FILES:.mlpack=.cmxs) $(PRINTER_FILES:.cma=.cmxa) topbin/coqtop_bin.exe

quickbyte: voboot
	dune build $(DUNEOPT) $(QUICKBYTE_TARGETS)

quickopt: voboot
	dune build $(DUNEOPT) $(QUICKOPT_TARGETS)

test-suite: voboot
	dune runtest $(DUNEOPT)

release: voboot
	dune build $(DUNEOPT) -p coq

apidoc: voboot
	dune build $(DUNEOPT) @doc

ocheck: voboot
	dune build $(DUNEOPT) @install --workspace=dev/dune-workspace.all

ireport:
	dune clean
	dune build $(DUNEOPT) @vodeps --profile=ireport
	dune exec coq_dune $(BUILD_CONTEXT)/.vfiles.d --profile=ireport
	dune build $(DUNEOPT) @install --profile=ireport


shims: bin/coqtop

bin:
	mkdir bin

bin/coqtop: | bin
	printf '#!/bin/sh\nd=$(PWD)/$(BUILD_CONTEXT)\n"$$d/topbin/coqtop_bin.exe" -coqlib "$$d" "$$@"\n' > bin/coqtop
	chmod +x bin/coqtop

clean:
	dune clean

# Other common dev targets
#
# dune build coq.install
# dune build ide/coqide.install

# Packaging / OPAM targets:
#
# dune -p coq @install
# dune -p coqide @install
