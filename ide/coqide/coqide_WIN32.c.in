#define _WIN32_WINNT 0x0501  /* Cf below, we restrict to  */

#include <caml/mlvalues.h>
#include <caml/memory.h>
#include <windows.h>

/* Win32 emulation of a kill -2 (SIGINT) */

/* It appears that the documentation for SetConsoleCtrlHandler used in the
   prior code (f5276a11) is incorrect.  When that's present, it causes some of
   the strange behavior described in #13550.
   
   This code signals all processes in the process group (multiple coqidetops and coqide.
   because the console is shared.  Idetop.win_interrupt is used to ignore the signal send
   to CoqIDE. */

CAMLprim value win32_interrupt() {
  CAMLparam0();
  GenerateConsoleCtrlEvent(CTRL_C_EVENT,0); /* signal our co-console */
  CAMLreturn(Val_unit);
}

/* convert an OCaml pid (a process-local handle #) to a Win32 pid  (global) */
CAMLprim value win32_cvtpid(value pseudopid) {
  CAMLparam1(pseudopid);
  HANDLE h;
  DWORD win32_pid;
  
  h = (HANDLE)(Long_val(pseudopid));
  win32_pid = GetProcessId(h);
  CAMLreturn(Val_int(win32_pid));
}
