(************************************************************************)
(*         *   The Coq Proof Assistant / The Coq Development Team       *)
(*  v      *   INRIA, CNRS and contributors - Copyright 1999-2018       *)
(* <O___,, *       (see CREDITS file for the list of authors)           *)
(*   \VV/  **************************************************************)
(*    //   *    This file is distributed under the terms of the         *)
(*         *     GNU Lesser General Public License Version 2.1          *)
(*         *     (see LICENSE file for the text of the license)         *)
(************************************************************************)

DECLARE PLUGIN "numeral_notation_plugin"

{

open Notation
open Numeral
open Pp
open Names
open Ltac_plugin
open Stdarg
open Pcoq.Prim

let pr_numnot_option _ _ _ = function
  | Nop -> mt ()
  | Warning n -> str "(warning after " ++ str n ++ str ")"
  | Abstract n -> str "(abstract after " ++ str n ++ str ")"

}

ARGUMENT EXTEND numnotoption
  PRINTED BY { pr_numnot_option }
| [ ] -> { Nop }
| [ "(" "warning" "after" bigint(waft) ")" ] -> { Warning waft }
| [ "(" "abstract" "after" bigint(n) ")" ] -> { Abstract n }
END

VERNAC COMMAND EXTEND NumeralNotation CLASSIFIED AS SIDEFF
  | #[ locality = Attributes.locality; ] ![proof][ "Numeral" "Notation" reference(ty) reference(f) reference(g) ":"
      ident(sc) numnotoption(o) ] ->

    { (* It is a bug to use the proof context here, but at the request of
       * the reviewers we keep this broken behavior for now. The Global env
       * should be used instead, and the `env, sigma` parameteter to the
       * numeral notation command removed.
       *)
      fun ~ontop ->
      let sigma, env = Option.cata
          (Lemmas.pf_fold Pfedit.get_current_context)
          (let e = Global.env () in Evd.from_env e, e) ontop in
      vernac_numeral_notation env sigma (Locality.make_module_locality locality) ty f g (Id.to_string sc) o;
      ontop }
END
