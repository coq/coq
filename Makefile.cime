###########################################################################
# CiME
###########################################################################

CIMEDIRS=compat completion dioph_caml integer_solver matching orderings \
	rewriting standard_matching_and_unification strategies terms \
	unification words

CIMEINCLUDES=-I cime $(CIMEDIRS:%=-I cime/%)

CIMECMA=unix.cma nums.cma cime/libcime.cma

CIMECMXA=$(CIMECMA:%.cma=%.cmxa)

libcime: cime/libcime.cma cime/libcime.cmxa

# definition of CIMECMO
include cime/cimecmo-def

CIMECMX=$(CIMECMO:%.cmo=%.cmx)

cime/libcime.cma: $(CIMECMO)
	$(OCAMLC) $(BYTEFLAGS) -a -o $@ $(CIMECMO)

cime/libcime.cmxa: $(CIMECMX)
	$(OCAMLOPT) $(OPTFLAGS) -a -o $@ $(CIMECMX)

clean::
	rm -f cime/libcime.* cime/*/*.cmo

cime-tags:
	find cime -maxdepth 3 -regex ".*\.ml[i4]?" | sort -r | xargs \
	etags --language=none\
	      "--regex=/let[ \t]+\([^ \t]+\)/\1/" \
	      "--regex=/let[ \t]+rec[ \t]+\([^ \t]+\)/\1/" \
	      "--regex=/and[ \t]+\([^ \t]+\)/\1/" \
	      "--regex=/type[ \t]+\([^ \t]+\)/\1/" \
              "--regex=/exception[ \t]+\([^ \t]+\)/\1/" \
	      "--regex=/val[ \t]+\([^ \t]+\)/\1/" \
	      "--regex=/module[ \t]+\([^ \t]+\)/\1/"
