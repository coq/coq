(rule
 (alias test-gen)
 (targets test_suite_rules.sexp)
 (deps
  (source_tree bugs)
  (source_tree complexity)
  (source_tree coq-makefile)
  (source_tree coqchk)
  (source_tree coqdoc)
  (source_tree coqwc)
  (source_tree failure)
  (source_tree ide)
  (source_tree interactive)
  (source_tree ltac2)
  (source_tree micromega)
  (source_tree misc)
  (source_tree modules)
  (source_tree output)
  (source_tree output-coqchk)
  (source_tree output-coqtop)
  (source_tree output-failure)
  (source_tree output-modulo-time)
  (source_tree prerequisite)
  (source_tree primitive)
  (source_tree ssr)
  (source_tree stm)
  (source_tree success)
  (source_tree tools)
  (source_tree vio)
  (source_tree ../theories)
  (source_tree ../user-contrib)
  ; ../../install/default/lib/coq-core/META
  )
 (mode promote)
 (action (run ./tools/gen_rules/gen_rules.exe)))

(env (_
 (binaries
  ide/fake_ide.exe
  ../../install/default/bin/coqdep
  ../../install/default/bin/coqc
  ../../install/default/bin/coqtop
  ../../install/default/bin/coqdoc
  ../../install/default/bin/coq_makefile
  ../../install/default/bin/coqtop.byte
  ../../install/default/bin/votour
  ../../install/default/bin/coqchk
  ../../install/default/bin/coqtacticworker.opt
  ../../install/default/bin/coqqueryworker.opt
  ../../install/default/bin/coqproofworker.opt
  )
 ))

(include test_suite_rules.sexp)

; the expected output for the MExtraction test is plugins/micromega/micromega.ml
; except with additional newline
(subdir output
 (rule
  (targets MExtraction.out)
  (action
   (with-stdout-to %{targets}
    (progn
     (cat ../../plugins/micromega/micromega.ml)
     (echo "\n"))))))
