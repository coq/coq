P = 
fun e : option L => match e with
                    | Some cl => Some cl
                    | None => None
                    end
     : option L -> option L

P is not universe polymorphic
fun (m n p : nat) (H : S m <= S n + p) => le_S_n m (n + p) H
     : forall m n p : nat, S m <= S n + p -> m <= n + p
fun n : nat => let x := A n in ?y ?y0:T n
     : forall n : nat, T n
where
?y : [n : nat  x := A n : T n |- ?T0 -> T n] 
?y0 : [n : nat  x := A n : T n |- ?T0] 
fun n : nat => ?y ?y0:T n
     : forall n : nat, T n
where
?y : [n : nat |- ?T0 -> T n] 
?y0 : [n : nat |- ?T0] 
