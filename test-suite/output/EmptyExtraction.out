type empty_set = |

Extracted code successfully compiled
type empty_set = |

type 'x not = 'x -> empty_set

Extracted code successfully compiled
type empty_set = |

type 'x not = 'x -> empty_set

(** val foo : 'a1 not not not -> 'a1 not **)

let foo p q =
  p (fun r -> r q)

Extracted code successfully compiled
type empty = |

Extracted code successfully compiled
type empty = |

(** val empty_rect : empty -> 'a1 **)

let empty_rect _ =
  assert false (* absurd case *)

Extracted code successfully compiled
type empty = |

(** val bar : empty -> 'a1 **)

let bar _ =
  assert false (* absurd case *)

Extracted code successfully compiled
