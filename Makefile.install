##########################################################################
##         #   The Coq Proof Assistant / The Coq Development Team       ##
##  v      #         Copyright INRIA, CNRS and contributors             ##
## <O___,, # (see version control and CREDITS file for authors & dates) ##
##   \VV/  ###############################################################
##    //   #    This file is distributed under the terms of the         ##
##         #     GNU Lesser General Public License Version 2.1          ##
##         #     (see LICENSE file for the text of the license)         ##
##########################################################################

# This makefile regroups installation rules
# It is included by Makefile.build

# NOTA: currently, the install rules below assume that everything needed
# has already been correctly built. In particular, this is *not* enforced
# by dependencies between rules, so do *not* try overly clever things like
# 'make world install' in one unique command

ifeq ($(LOCAL),true)
install:
	@echo "Nothing to install in a local build!"
else
install: install-coq install-coqide install-doc-$(WITHDOC)
endif

# NOTA: for install-coqide, see Makefile.ide

install-doc-all: install-doc
install-doc-no:
install-byte:

.PHONY: install install-byte install-coqide install-doc-all install-doc-no

# These variables are intended to be set by the caller to make, only used
# by the OSX dmg image so we could get rid of them.

# COQINSTALLPREFIX=
# OLDROOT=

# Can be changed for a local installation (to make packages).
 # You must NOT put a "/" at the end (Cygnus for win32 does not like "//").

INSTALLLIB:=install -m 644

ifdef COQINSTALLPREFIX
FULLCOQLIB=$(COQLIBINSTALL:"$(OLDROOT)%="$(COQINSTALLPREFIX)%)
FULLDOCDIR=$(DOCDIR:"$(OLDROOT)%="$(COQINSTALLPREFIX)%)
# Note that substitution here would not work due to make's % pattern not matching the empty string
FULLCOQPREFIX=$(COQINSTALLPREFIX)
else
FULLCOQLIB=$(COQLIBINSTALL)
FULLDOCDIR=$(DOCDIR)
FULLCOQPREFIX=$(COQPREFIX)
endif

.PHONY: install-coq install-dune install-library

# --display quiet should not produce output, dune bug
install-dune: $(BCONTEXT)/coq-core.install $(BCONTEXT)/coqide-server.install
	dune install --display quiet --mandir="$(MANDIR)" --prefix="$(FULLCOQPREFIX)" coq-core
	dune install --display quiet --mandir="$(MANDIR)" --prefix="$(FULLCOQPREFIX)" coqide-server

install-coq: install-dune install-library

# This used to be overriden to fix very old bugs with install
INSTALLSH=./install.sh

# NB: some files don't produce native files (eg Ltac2 files) as they
# don't have any Coq definitions. Makefile can't predict that so we
# use || true vos build is bugged in -quick mode, see #11195
install-library:
	$(SHOW)'INSTALL   VOFILES'
	$(HIDE)$(MKDIR) $(FULLCOQLIB)
	$(HIDE)$(INSTALLSH) $(VO_OUT_DIR) $(FULLCOQLIB) $(ALLVO:.$(VO)=.vo)
	$(HIDE)$(INSTALLSH) $(VO_OUT_DIR) $(FULLCOQLIB) $(ALLVO:.$(VO)=.vos) || true
ifneq ($(NATIVECOMPUTE),)
	$(HIDE)$(INSTALLSH) $(VO_OUT_DIR) $(FULLCOQLIB) $(NATIVEFILES) || true
endif
	$(HIDE)$(INSTALLSH) $(VO_OUT_DIR) $(FULLCOQLIB) $(VFILES)
	$(HIDE)$(INSTALLSH) $(VO_OUT_DIR) $(FULLCOQLIB) $(GLOBFILES)
	$(HIDE)$(MKDIR) $(FULLCOQLIB)/user-contrib

# TODO
ifeq ($(HASCOQIDE),no)
install-coqide:
else
install-coqide: $(BCONTEXT)/coqide.install
	dune install --display quiet --prefix=$(FULLCOQPREFIX) coqide
endif

# For emacs:
# Local Variables:
# mode: makefile
# End:
